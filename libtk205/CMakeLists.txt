set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
project(libtk205)

include(CTest)
set(JSON_BuildTests OFF CACHE INTERNAL "")

# include_directories adds locations to the -I command line
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/vendor/btwxt/src)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/vendor/json/single_include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/vendor/json/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src/build/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../schema-205/build/include)

add_subdirectory(vendor/btwxt)

add_custom_target(generate_cpp ALL 
                  COMMAND doit headers
                  COMMAND doit -s cpp
                  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/../schema-205")

# copy_directory will create the destination if it does not exist
add_custom_target(copy_generated_source ALL
                  COMMAND ${CMAKE_COMMAND} -E make_directory "${PROJECT_SOURCE_DIR}/include"
                  COMMAND ${CMAKE_COMMAND} "-DPROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR}" -P "${PROJECT_SOURCE_DIR}/cmake/copy_base_class_files.cmake"
                  COMMAND ${CMAKE_COMMAND} "-DPROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR}" -P "${PROJECT_SOURCE_DIR}/cmake/copy_autogenerated_files.cmake")

# Ideally, generated source files will be cleaned before cmake builds the project. Cleaning the 
# files guarantees that if the generator fails silently, the build fails normally (and 
# does not use out-of-date source). (CMake can check if files are different, but there's no 
# check for if they should be different and aren't.)
# GLOB is deemed acceptable for this build.

file(GLOB RS_SOURCES "${PROJECT_SOURCE_DIR}/../schema-205/build/cpp/*.cpp")
file(GLOB RS_HEADERS "${PROJECT_SOURCE_DIR}/../schema-205/build/include/*.h")
file(GLOB Class_declarations "${PROJECT_SOURCE_DIR}/include/*.h")

set (SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/libtk205.cpp"
             "${CMAKE_CURRENT_SOURCE_DIR}/src/error_handling_tk205.cpp"
             "${CMAKE_CURRENT_SOURCE_DIR}/src/rs_instance_factory.cpp"
             ${RS_HEADERS} 
             ${RS_SOURCES}
             ${Class_declarations})

# The GENERATED property prevents the source files being used before they exist.
set_source_files_properties(${SOURCES} PROPERTIES GENERATED TRUE)

add_library(libtk205 src/libtk205.cpp ${SOURCES})
target_link_libraries(libtk205 btwxt)
add_dependencies(libtk205 copy_generated_source)
add_dependencies(copy_generated_source generate_cpp)

add_subdirectory(vendor)
if (BUILD_TK205_TESTING)
  add_compile_definitions(TEST205_INPUT_EXAMPLES_DIR="${TEST205_INPUT_EXAMPLES_DIR}")
  add_subdirectory(test)
endif()

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
